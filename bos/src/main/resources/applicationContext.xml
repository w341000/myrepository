<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context.xsd
						http://www.springframework.org/schema/aop
						http://www.springframework.org/schema/aop/spring-aop.xsd
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx.xsd">
	
	<!-- 加载jdbc属性文件 -->
	<context:property-placeholder location="classpath:jdbc.properties"/>
						
	<!-- 数据源 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${driverClass}"/>
		<property name="jdbcUrl" value="${jdbcUrl}"/>
		<property name="user" value="${user}"/>
		<property name="password" value="${password}"/>
	</bean>
	<!-- spring框架用于整合Hibernate的工厂bean-->
	<bean id="sessionFactory"  class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<!-- 注入Hibernate相关的属性 -->
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>
		<!-- 注入Hibernate的映射文件 -->
		<property name="mappingDirectoryLocations">
			<list>
				<value>classpath:bos/domain</value>
			</list>
		</property>
	</bean>
	
	<!-- 事务管理器 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	
	<!-- 组件扫描 -->
	<context:component-scan base-package="bos"/>
	<!-- 引入注解解析器 -->
	<context:annotation-config/>
	<!-- 事务注解 -->
	<tx:annotation-driven />
	
	<!-- 配置远程服务的代理对象 -->
	<bean id="customerService" class="org.springframework.remoting.caucho.HessianProxyFactoryBean">
		<property name="serviceInterface" value="bos.crm.CustomerService"/><!-- 注入接口类型 -->
		<property name="serviceUrl" value="http://localhost:8080/crm/remoting/customer"/> <!-- 服务访问路径 -->
	</bean>
	<!-- 配置一个shiro工厂bean用于创建shiro框架用到的过滤器 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" /><!-- 注入安全管理器 -->
		<property name="loginUrl" value="/login.jsp"/><!-- 注入当前系统的登录页面 -->
		<property name="successUrl" value="/index.jsp" /><!-- 注入登录成功页面 -->
		<property name="unauthorizedUrl" value="/errorpages/unauthorized.jsp"/><!-- 注入权限不足提示页面 -->
		<!-- 注入url拦截规则 -->
		<property name="filterChainDefinitions">
			<value>
				/css/** = anon
				/images/** = anon
				/js/** = anon
				/errorpages/** = anon
				/login.jsp* = anon
				/validatecode.jsp* = anon
				/userAction_login.action = anon
				/page_base_staff.action = perms["staff:look"]
				/* = authc
			</value>
		</property>
	</bean>
	<!-- 让spring管理自定义realm -->
	<bean id="bosRealm"  class="bos.shiro.BOSRealm"/>
	<!-- shiro安全管理器,为其注入realm -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager" >
		<property name="realm" ref="bosRealm"/>
	</bean>
	<!-- 开启shiro注解 -->
	<!-- 自动代理 -->
	<bean id="defaultAdvisorAutoProxyCreator" 
		class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator">
		<!-- 强制使用cglib为Action创建代理对象 -->
		<property name="proxyTargetClass" value="true"></property>
	</bean>
	
	<!-- 切面类 -->
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor"/>
</beans>
